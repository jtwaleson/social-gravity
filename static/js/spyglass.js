// Generated by CoffeeScript 1.3.3
(function() {
  var Spyglass;

  Spyglass = (function() {

    function Spyglass() {
      var _this = this;
      this.last_x = 0;
      this.last_y = 0;
      this.overlay = $("<div>").attr("id", "spyglass_overlay").hide().appendTo("body");
      this.glow = $("<div>").attr("id", "spyglass_glow").appendTo(this.overlay).html('<br/><br/>drag').draggable({
        drag: function(e, ui) {
          var d, dx, dy, event;
          event = e.originalEvent;
          dx = _this.last_x - event.pageX;
          dy = _this.last_y - event.pageY;
          _this.glow.css('left', event.pageX);
          _this.glow.css('top', event.pageY);
          d = Math.sqrt(dx * dx + dy * dy);
          if (d > 25) {
            _this.last_x = event.pageX;
            _this.last_y = event.pageY;
            return simulation.who_is_popular_here(simulation.zoom.translate_x_back(event.pageX), simulation.zoom.translate_y_back(event.pageY));
          }
        },
        start: function(e, ui) {
          return _this.who_to_follow_ul.empty();
        },
        stop: function(e, ui) {
          var btn, li;
          li = $("<li>").addClass('btn');
          btn = $("<button>").text("Follow suggestions?").appendTo(li).data('start_at', 0).click(function(event) {
            var item, people, start_at, ul, user, _i, _len, _ref, _results;
            ul = $(this).closest('ul');
            people = ul.data('who_to_follow');
            downloader.q.tasks = (function() {
              var _i, _len, _ref, _results;
              _ref = downloader.q.tasks;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                item = _ref[_i];
                if (!(item.spyglass != null)) {
                  _results.push(item);
                }
              }
              return _results;
            })();
            ul.find('li.follow_suggestion').remove();
            start_at = $(this).data('start_at');
            $(this).data('start_at', start_at + 5);
            $(this).text('More...');
            if (start_at + 5 > people.length) {
              $(this).remove();
            }
            _ref = people.slice(start_at, (start_at + 4) + 1 || 9e9);
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              user = _ref[_i];
              _results.push((function(user) {
                ul.find('li.btn').before($("<li>").text("?").attr('id', "you_should_follow_" + user.id).addClass('follow_suggestion'));
                return downloader.q.push({
                  id: user.id
                }, function(result) {
                  if (result.error != null) {
                    return $("#you_should_follow_" + user.id).text('DAMN YOU TWITTER API');
                  } else {
                    result = result.result;
                    return $("#you_should_follow_" + user.id).empty().append($("<div>").addClass('follow_suggestion').html("<a target='_blank' href='https://twitter.com/" + result.screen_name + "'>@" + result.screen_name + "</a> - " + result.description)).append($("<button>").text('+').addClass('add_to_field').click(function() {
                      return simulation.add_friend(user.id);
                    }));
                  }
                });
              })(user));
            }
            return _results;
          });
          return _this.who_to_follow_ul.append(li);
        }
      });
      this.words = $("<ul>").attr("id", "words").appendTo(this.glow);
      this.who_is_here_ul = $("<ul>").attr("id", "who_is_here").appendTo(this.glow);
      this.who_to_follow_ul = $("<ul>").attr("id", "who_to_follow").appendTo(this.glow);
    }

    Spyglass.prototype.clear = function() {
      this.who_is_here_ul.empty();
      this.words.empty();
      return this.who_to_follow_ul.empty();
    };

    Spyglass.prototype.reset = function() {
      this.glow.css('left', $("body").width() / 2);
      this.glow.css('top', $("body").height() / 2);
      return this.clear();
    };

    return Spyglass;

  })();

  $(function() {
    window.spyglass = new Spyglass;
    return new Button(3, "&#x22B9;", "Insight eye: Find which keywords are used in an area", "i", "", function() {
      spyglass.overlay.toggle();
      $(this).toggleClass("active");
      if ($(this).is('.active')) {
        return spyglass.reset();
      }
    });
  });

}).call(this);
